@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  color: #333;
  font-family: "Montserrat", Helvetica, sans-serif;
  font-size: 1em;
  background: #eef2f3;
  padding: 0 1em; }
  @media (min-width: 1080px) {
    body {
      padding: 0 1.5em; } }

p {
  font-size: 0.875em;
  line-height: 1.7; }

.wrap {
  max-width: 1216px;
  margin: 0 auto; }

.space-l-r,
.header-nav {
  padding: 0 16px; }
  @media (min-width: 1080px) {
    .space-l-r,
    .header-nav {
      padding: 0 20px; } }

a {
  color: #417505;
  text-decoration: none; }

nav a {
  position: relative;
  padding: 0 5px; }
  nav a:before {
    content: "";
    position: absolute;
    background: #417505;
    opacity: 0.3;
    height: 2px;
    bottom: 0;
    left: 0;
    width: 100%;
    transition: height 0.2s; }
  nav a:hover:before, nav a.is-current:before {
    height: 18px;
    opacity: 0.3; }

.italic {
  font-style: italic;
  font-family: Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif; }

.link-arrow {
  position: relative;
  padding-right: 1.25em;
  display: inline-block;
  transition: color 0.2s; }
  .link-arrow:after {
    content: "↝";
    display: inline-block;
    position: absolute;
    right: 0;
    top: -5px;
    font-size: 1.25em; }
  .link-arrow:hover {
    color: #B8E986; }

ul {
  margin: 0;
  padding: 0; }

li {
  padding: 0; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

.slick-dots {
  width: 100%;
  text-align: center;
  position: absolute;
  z-index: 999;
  bottom: 0.625em;
  display: inline-block; }
  .slick-dots li {
    list-style: none;
    display: inline-block;
    margin: 0 0.1875em; }
  .slick-dots button {
    background: #fff;
    border: 0;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    opacity: 0.6;
    text-indent: -9999px; }
  .slick-dots .slick-active button {
    opacity: 1; }

header {
  background: #fff;
  text-align: center; }
  header h1 {
    margin: 15px 0; }
  @media (min-width: 768px) {
    header {
      text-align: left; } }

.mandarin-mansion-logo {
  display: inline-block; }
  .mandarin-mansion-logo img {
    height: 60px;
    vertical-align: middle; }
  .mandarin-mansion-logo .logo-mobile {
    display: none; }

.mandarin-mansion {
  display: inline-block;
  font-size: 1.25em; }
  .mandarin-mansion a {
    color: #333;
    transition: opacity 0.2s; }
    .mandarin-mansion a:hover {
      opacity: 0.8; }
  .mandarin-mansion small {
    display: block;
    opacity: 0.6;
    font-size: 50%;
    font-weight: 400;
    position: relative;
    text-align: center; }
    .mandarin-mansion small:before, .mandarin-mansion small:after {
      display: block;
      width: 17%;
      content: '';
      position: absolute;
      top: 50%;
      margin-top: -1px;
      height: 1px;
      background: #333;
      opacity: 0.6; }
    .mandarin-mansion small:after {
      right: 0; }
  @media (min-width: 768px) {
    .mandarin-mansion {
      font-size: 2em; } }

nav {
  font-size: 0.875em;
  padding-bottom: 16px; }
  nav a {
    color: #333; }
    nav a:before {
      opacity: 0; }
    nav a:hover:before {
      opacity: 0.3; }
  nav ul
li {
    list-style: none;
    display: inline-block;
    padding: 0 5px; }
  @media (min-width: 768px) {
    nav {
      font-size: 1em;
      float: right;
      margin-top: 2.0625em;
      padding-bottom: 0; } }

@media (min-width: 768px) {
  .mainheader.has-sticky {
    height: 88px; } }

.header-nav {
  box-sizing: border-box; }

.is-sticky {
  transition: all 0.2s; }
  @media (min-width: 768px) {
    .is-sticky {
      position: fixed;
      width: 100%;
      left: 0;
      top: 0;
      z-index: 9999;
      background: #fff;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); }
      .is-sticky .mandarin-mansion {
        font-size: 1.25em; }
      .is-sticky .mandarin-mansion-logo .logo-desktop {
        display: none; }
      .is-sticky .mandarin-mansion-logo .logo-mobile {
        display: inline-block;
        height: 40px; }
      .is-sticky nav {
        margin-top: 1.5625em;
        margin-left: 1.25em; } }

footer {
  background: #fff;
  overflow: hidden;
  font-size: 0.75em;
  padding: 0 0.625em 0.625em 0.625em;
  margin-top: 1.25em; }
  footer a {
    color: #808080; }
  footer li {
    margin-bottom: 0.3125em; }
  footer ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
  footer h2 {
    font-weight: 400; }
  @media (min-width: 768px) {
    footer > div {
      padding: 0 1.875em;
      box-sizing: border-box;
      width: calc(100%/3);
      float: left; } }
  @media (min-width: 1080px) {
    footer {
      margin-top: 3.125em;
      padding-bottom: 1em; } }

.copyright {
  clear: both;
  float: left;
  text-align: center;
  width: 100%;
  color: #808080;
  margin-bottom: 0; }

.page-header img {
  max-width: 100%;
  vertical-align: top; }

@media (min-width: 768px) {
  .page-header {
    height: 320px;
    position: relative; }
    .page-header:before {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: 2;
      background: -webkit-linear-gradient(bottom, rgba(0, 0, 0, 0.65), transparent); }
    .page-header img {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1; } }

.page-intro {
  padding: 0 1.25em 1px; }
  .page-intro a {
    color: #fff;
    text-decoration: underline;
    transition: opacity 0.2s; }
    .page-intro a:hover {
      opacity: 0.8; }
  @media (min-width: 768px) {
    .page-intro {
      position: absolute;
      left: 1.25em;
      bottom: 1.25em;
      color: #fff;
      max-width: 60%;
      z-index: 3;
      padding: 0; } }

.carousel-shop a {
  display: block;
  height: 100%; }

.carousel-shop img {
  max-width: 100%; }

.carousel-shop h2 {
  margin: 0; }

.hero {
  min-height: 150px;
  position: relative;
  overflow: hidden;
  background: #333;
  color: #fff; }
  .hero__content {
    color: #fff;
    padding: 0.5em; }
  @media screen and (min-width: 1080px) {
    .hero {
      height: 320px; }
      .hero img {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1; }
      .hero__content {
        max-width: 50%;
        position: absolute;
        bottom: 20%;
        background: rgba(51, 51, 51, 0.8);
        padding: 0.625em 0.9375em;
        z-index: 2; }
        .hero__content h2 {
          font-size: 2.125em; } }

.introduction {
  padding: 0.625em;
  background: #333 url("../images/bg-intro.jpg") no-repeat;
  background-size: cover;
  color: #fff;
  position: relative; }
  .introduction a {
    color: #fff; }
  .introduction__content {
    z-index: 2;
    position: relative; }
  .introduction:before {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: #333;
    opacity: 0.8;
    content: '';
    z-index: 1; }
  .introduction h2 {
    font-size: 1em;
    margin: 0 0 1rem; }
  .introduction p {
    font-size: 0.875em;
    line-height: 1.2rem;
    margin: 0; }
  .introduction .avatar {
    display: none; }
  @media (min-width: 768px) {
    .introduction {
      padding: 1.25em; }
      .introduction .avatar {
        width: 80px;
        height: 80px;
        position: absolute;
        display: block;
        top: 50%;
        left: 0;
        margin-top: -2.625em; }
      .introduction__content {
        padding-left: 6.25em; } }
  @media (min-width: 1080px) {
    .introduction {
      padding: 2.5em 5em; }
      .introduction__content {
        padding-left: 12.5em; }
      .introduction h2 {
        font-size: 2.125em; }
      .introduction p {
        font-size: 1.5em;
        line-height: 2.4rem; }
      .introduction .avatar {
        width: 110px;
        height: 110px;
        left: 3rem;
        margin-top: -3.4375em; } }

.avatar {
  border-radius: 50%;
  overflow: hidden;
  border: solid 2px #fff; }
  .avatar img {
    max-width: 100%; }

.products {
  overflow: hidden;
  padding: 1em 0; }
  .products li {
    list-style-type: none; }
  @media (min-width: 768px) {
    .products {
      padding: 1.25em 0; } }
  @media (min-width: 1080px) {
    .products {
      padding: 3.125em 0 1.875em; } }

.product {
  box-sizing: border-box;
  margin-bottom: 1em; }
  .product h2 {
    margin: 0; }
  .product a {
    position: relative;
    display: block;
    background: #fff;
    padding: 10px 10px 34px;
    transition: background 0.2s;
    color: #333; }
    .product a:before {
      display: none; }
    .product a:hover {
      background: #333;
      color: #fff; }
      .product a:hover .product__pricetag {
        background: #333; }
  .product__img img {
    width: 100%; }
  .product__pricetag,
  .product h2 {
    position: absolute;
    font-size: 14px;
    font-weight: 400; }
  .product__pricetag {
    padding: 2px 5px;
    right: 10px;
    top: 20px;
    background: #fff; }
  .product h2 {
    bottom: 0;
    left: 0;
    width: 100%;
    box-sizing: border-box;
    text-align: center;
    padding-top: 10px;
    padding-bottom: 10px; }
  .product--reserved span, .product--sold span {
    text-transform: uppercase; }
  .product--reserved a {
    background: rgba(51, 51, 51, 0.5);
    color: #fff; }
    .product--reserved a .product__pricetag {
      background: rgba(51, 51, 51, 0.5); }
  .product--sold a {
    background: rgba(51, 51, 51, 0.2);
    color: #333; }
    .product--sold a .product__img {
      opacity: 0.5; }
    .product--sold a .product__pricetag {
      color: red;
      z-index: 5;
      background: rgba(51, 51, 51, 0.1); }
    .product--sold a:hover .product__img {
      opacity: 1; }
  @media (min-width: 768px) {
    .product {
      padding: 0 15px;
      width: calc(100%/3);
      float: left;
      margin-bottom: 1.25em; } }
  @media (min-width: 1080px) {
    .product {
      width: calc(100%/4);
      margin-bottom: 1.875em; } }

.update-widget {
  overflow: hidden; }

@media (min-width: 1080px) {
  .update-content {
    width: 70%;
    float: left; } }

@media (min-width: 1080px) {
  .widget {
    width: 25%;
    float: right;
    min-height: 270px;
    background: rgba(0, 0, 0, 0.3); } }

.title-has-line,
.page-intro h1,
.about-author h1 {
  text-transform: uppercase;
  position: relative;
  padding-bottom: 10px;
  display: inline-block; }
  .title-has-line:after,
  .page-intro h1:after,
  .about-author h1:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px;
    background: #ccc; }
  @media (min-width: 768px) {
    .title-has-line:after,
    .page-intro h1:after,
    .about-author h1:after {
      width: 45%; } }

blockquote {
  margin: 1em 0; }
  blockquote em {
    font-size: 1.375em;
    font-family: Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif;
    line-height: 1.4; }
  @media (min-width: 768px) {
    blockquote {
      margin: 1.5em 1.875em; }
      blockquote em {
        padding-left: 1.25em;
        display: block;
        font-size: 1.5em;
        position: relative; }
        blockquote em:before {
          content: '';
          display: block;
          width: 5px;
          height: 100%;
          position: absolute;
          top: 0;
          left: 0;
          background: #B8E986; } }

@media (min-width: 768px) {
  .about-author {
    padding: 1.875em 1.25em;
    margin-bottom: 1.25em;
    background: #fff; }
    .about-author p, .about-author h1, .about-author h2 {
      max-width: 768px;
      margin: 0 auto 1em; } }

.is-article header {
  background: none; }

.is-article h1, .is-article h2, .is-article h3 {
  font-weight: 400; }

.is-article h1, .is-article h3 {
  margin-bottom: 0.3125em; }

.is-article small {
  font-size: 0.875em; }

@media (min-width: 768px) {
  .is-article h1, .is-article h3 {
    font-size: 1.5em; }
  .is-article h2 {
    font-size: 2.125em; }
  .is-article small {
    font-size: 1em; } }

.article-has-thumb {
  background: #fff;
  margin-top: 0.625em; }
  @media (min-width: 768px) {
    .article-has-thumb {
      position: relative;
      padding-left: 50%;
      overflow: hidden;
      margin-top: 0.875em; } }

.article__description {
  padding: 1px 0.875em; }
  .article__description a {
    color: #333;
    transition: color 0.2s; }
    .article__description a:hover {
      color: #417505; }
  @media (min-width: 768px) {
    .article__description {
      padding: 0 1.25em; } }

.article__thumb {
  display: none; }
  @media (min-width: 768px) {
    .article__thumb {
      display: block;
      padding-bottom: 50%;
      height: 0;
      width: 50%;
      background-size: cover;
      background-position: center;
      position: absolute;
      top: 0;
      left: 0; }
      .article__thumb:before {
        width: 100%;
        height: 100%;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        background-color: rgba(0, 0, 0, 0.65);
        opacity: 0; }
      .article__thumb:hover:before {
        opacity: 1;
        transition: opacity 0.2s; }
      .article__thumb:hover span {
        opacity: 1;
        transition: opacity 0.2s;
        transition-delay: 0.2s; }
      .article__thumb span {
        opacity: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        margin: -32px 0 0 -44px;
        color: #fff;
        display: inline-block;
        padding: 0.3125em 0.625em;
        border: solid 2px #fff; } }

/*# sourceMappingURL=data:application/json;base64, */
