@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  color: #333;
  font-family: "Montserrat", Helvetica, sans-serif;
  font-size: 1rem;
  background: #eef2f3; }
  @media (min-width: 1080px) {
    body {
      padding: 0 1rem; } }

.wrap {
  max-width: 1216px;
  margin: 0 auto; }

.space-l-r {
  padding: 0 16px; }
  @media (min-width: 1080px) {
    .space-l-r {
      padding: 0 20px; } }

a {
  color: #417505;
  text-decoration: none; }

nav a {
  position: relative; }
  nav a:before {
    content: "";
    padding: 0 5px;
    position: absolute;
    background: #417505;
    opacity: 0.3;
    height: 2px;
    bottom: 0;
    left: -2px;
    width: 100%;
    transition: height 0.2s; }
  nav a:hover:before {
    height: 18px; }

.italic {
  font-style: italic;
  font-family: Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif; }

.link-arrow {
  position: relative;
  padding-right: 1.25rem;
  display: inline-block;
  transition: color 0.2s; }
  .link-arrow:after {
    content: "↝";
    display: inline-block;
    position: absolute;
    right: 0;
    top: -5px;
    font-size: 1.25rem; }
  .link-arrow:hover {
    color: #B8E986; }

ul {
  margin: 0;
  padding: 0; }

li {
  padding: 0; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

.slick-dots {
  width: 100%;
  text-align: center;
  position: absolute;
  z-index: 999;
  bottom: 0.625rem;
  display: inline-block; }
  .slick-dots li {
    list-style: none;
    display: inline-block;
    margin: 0 0.1875rem; }
  .slick-dots button {
    background: #fff;
    border: 0;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    opacity: 0.6;
    text-indent: -9999px; }
  .slick-dots .slick-active button {
    opacity: 1; }

header {
  background: #fff;
  text-align: center; }
  header h1 {
    margin: 15px 0; }
  @media (min-width: 736px) {
    header {
      text-align: left; } }

.mandarin-mansion {
  display: inline-block; }
  .mandarin-mansion small {
    display: block;
    opacity: 0.6;
    font-size: 50%;
    font-weight: 400;
    position: relative;
    text-align: center; }
    .mandarin-mansion small:before, .mandarin-mansion small:after {
      display: block;
      width: 17%;
      content: '';
      position: absolute;
      top: 50%;
      margin-top: -1px;
      height: 1px;
      background: #333;
      opacity: 0.6; }
    .mandarin-mansion small:after {
      right: 0; }

nav {
  padding-bottom: 16px; }
  nav a {
    color: #333; }
    nav a:before {
      opacity: 0; }
    nav a:hover:before {
      opacity: 0.3; }
  nav ul
li {
    list-style: none;
    display: inline-block;
    padding: 0 5px; }
  @media (min-width: 736px) {
    nav {
      float: right;
      margin-top: 2.0625rem;
      padding-bottom: 0; } }

.carousel-shop a {
  display: block;
  height: 100%; }

.carousel-shop img {
  max-width: 100%; }

.carousel-shop h2 {
  margin: 0; }

@media screen and (min-width: 1080px) {
  .hero {
    height: 320px;
    position: relative;
    overflow: hidden; }
    .hero img {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1; }
    .hero__content {
      max-width: 50%;
      position: absolute;
      bottom: 20%;
      background: rgba(51, 51, 51, 0.8);
      padding: 0.625rem 0.9375rem;
      color: #fff;
      z-index: 2; }
      .hero__content h2 {
        font-size: 2.125rem; } }

.introduction {
  padding: 0.625rem 1.25rem;
  background: #333 url("../images/bg-intro.jpg") no-repeat;
  background-size: cover;
  color: #fff;
  position: relative; }
  .introduction a {
    color: #fff; }
  .introduction__content {
    z-index: 2;
    position: relative; }
  .introduction:before {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: #333;
    opacity: 0.8;
    content: '';
    z-index: 1; }
  .introduction h2 {
    margin: 0 0 1rem; }
  .introduction p {
    margin: 0; }
  @media (min-width: 736px) {
    .introduction {
      padding: 2.5rem 5rem; }
      .introduction .avatar {
        position: absolute;
        top: 50%;
        left: 3rem;
        margin-top: -3.4375rem; }
      .introduction__content {
        padding-left: 12.5rem; }
      .introduction h2 {
        font-size: 2.125rem; }
      .introduction p {
        font-size: 1.5rem;
        line-height: 2.4rem; } }

.avatar {
  width: 110px;
  height: 110px;
  border-radius: 50%;
  overflow: hidden;
  border: solid 2px #fff; }
  .avatar img {
    max-width: 100%; }

.products {
  overflow: hidden;
  padding: 1.875rem 0; }
  .products li {
    list-style-type: none; }
  @media (min-width: 1080px) {
    .products {
      padding: 3.125rem 0 1.875rem; } }

.product {
  padding: 0 15px;
  box-sizing: border-box;
  margin-bottom: 1rem; }
  .product h2 {
    margin: 0; }
  .product a {
    position: relative;
    display: block;
    background: #fff;
    padding: 10px 10px 34px;
    transition: background 0.2s;
    color: #333; }
    .product a:before {
      display: none; }
    .product a:hover {
      background: #333;
      color: #fff; }
      .product a:hover .product__pricetag {
        background: #333; }
  .product__img img {
    width: 100%; }
  .product__pricetag,
  .product h2 {
    position: absolute;
    font-size: 14px;
    font-weight: 400; }
  .product__pricetag {
    padding: 2px 5px;
    right: 10px;
    top: 20px;
    background: #fff; }
  .product h2 {
    bottom: 0;
    left: 0;
    width: 100%;
    box-sizing: border-box;
    text-align: center;
    padding-top: 10px;
    padding-bottom: 10px; }
  .product--reserved span, .product--sold span {
    text-transform: uppercase; }
  .product--reserved a {
    background: rgba(51, 51, 51, 0.5);
    color: #fff; }
    .product--reserved a .product__pricetag {
      background: rgba(51, 51, 51, 0.5); }
  .product--sold a {
    background: rgba(51, 51, 51, 0.2);
    color: #333; }
    .product--sold a .product__img {
      opacity: 0.5; }
    .product--sold a .product__pricetag {
      z-index: 5;
      background: rgba(51, 51, 51, 0.1); }
    .product--sold a:hover .product__img {
      opacity: 1; }
  @media (min-width: 736px) {
    .product {
      width: calc(100%/2);
      float: left;
      margin-bottom: 0.9375rem; } }
  @media (min-width: 1080px) {
    .product {
      width: calc(100%/4);
      margin-bottom: 1.875rem; } }

.update-widget {
  overflow: hidden;
  padding: 0 0.9375rem; }

.update header {
  background: none; }

.update h2, .update h3 {
  font-weight: 400; }

.update h3 {
  margin-bottom: 0.3125rem; }

.update small {
  font-size: 0.875rem; }

.update p {
  font-size: 0.875rem;
  line-height: 1.5rem; }

@media (min-width: 1080px) {
  .update {
    width: 70%;
    float: left; }
    .update h3 {
      font-size: 1.5rem; }
    .update h2 {
      font-size: 2.125rem; }
    .update small {
      font-size: 1rem; } }

@media (min-width: 1080px) {
  .widget {
    width: 25%;
    float: right;
    min-height: 270px;
    background: rgba(0, 0, 0, 0.3); } }

footer {
  background: #fff;
  overflow: hidden;
  font-size: 0.75rem;
  padding: 0 0.9375rem 1rem;
  margin-top: 3.125rem; }
  footer a {
    color: #808080; }
  footer li {
    margin-bottom: 0.3125rem; }
  footer ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
  footer h2 {
    font-weight: 400; }
  @media (min-width: 1080px) {
    footer > div {
      padding: 0 1.875rem;
      box-sizing: border-box;
      width: calc(100%/3);
      float: left; } }

.copyright {
  clear: both;
  float: left;
  text-align: center;
  width: 100%;
  color: #808080;
  margin-bottom: 0; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwidmVuZG9yL19ub3JtYWxpemUuc2NzcyIsImJhc2UvX2xheW91dC5zY3NzIiwiYmFzZS9fdmFycy5zY3NzIiwiYmFzZS9fZnVuY3Rpb25zLnNjc3MiLCJiYXNlL19ncmlkLnNjc3MiLCJ2ZW5kb3IvX3NsaWNrLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fY2Fyb3VzZWwuc2NzcyIsInBhcnRpYWxzL19pbnRyby5zY3NzIiwicGFydGlhbHMvX3Byb2R1Y3RzLnNjc3MiLCJwYXJ0aWFscy9fdXBkYXRlLnNjc3MiLCJwYXJ0aWFscy9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCLDRFQUE0RTtBQUU1RTs7OztHQUlHO0FBRUg7RUFDRSx3QkFBd0I7RUFBRSxPQUFPO0VBQ2pDLDJCQUEyQjtFQUFFLE9BQU87RUFDcEMsK0JBQStCO0VBQUUsT0FBTyxFQUN6Qzs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsVUFBVSxFQUNYOztBQUVEO2dGQUNnRjtBQUVoRjs7Ozs7R0FLRztBQUVIOzs7Ozs7Ozs7Ozs7O0VBYUUsZUFBZSxFQUNoQjs7QUFFRDs7O0dBR0c7QUFFSDs7OztFQUlFLHNCQUFzQjtFQUFFLE9BQU87RUFDL0IseUJBQXlCO0VBQUUsT0FBTyxFQUNuQzs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGNBQWM7RUFDZCxVQUFVLEVBQ1g7O0FBRUQ7OztHQUdHO0FETEg7O0VDU0UsY0FBYyxFQUNmOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQThCLEVBQy9COztBQUVEOzs7R0FHRztBQUVIOztFQUVFLFdBQVcsRUFDWjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDBCQUEwQixFQUMzQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGtCQUFrQixFQUNuQjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsbUJBQW1CLEVBQ3BCOztBQUVEOzs7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QUNYLFlBQVksRUFLZjtJQWhCRDtNQVlTLGtCUGpCUyxFT2lCZTtJQVpqQztNQWFTLG9CUGxCUyxFT2tCZTtJQWJqQztNQWNZLGdCUG5CTSxFT21Ca0IsRUFBQTs7QUFLbEM7RUFERjtJQUVJLFdBQVc7SUFDWCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLCtCQUFnQixFQUVuQixFQUFBOztBQ2hDRDtFQUNFLGlCVEtnQjtFU0poQixpQkFBaUI7RUFDakIsbUJSRGdCO0VRRWhCLDBCUkZnQjtFUUdoQixxQlJIZ0IsRVFxQmpCO0VBdkJEO0lBTU0sZUFBZSxFQUFJO0VBTnpCO0lBT08seUJSTFcsRVFLZ0I7RUFQbEM7SUFTSSxVQUFVO0lBQ1YsV0FBVztJQUNYLHNCQUFzQixFQUN2QjtFQVpIO0lBYU8saUJBQWlCLEVBQUk7RUFDMUI7SUFkRjtNQWdCTSxvQlJkWTtNUWVaLHVCQUF1QjtNQUN2QixvQkFBVztNQUNYLFlBQVksRUFDYixFQUFBOztBQUtMO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7RUFDZixpQkFBaUIsRUFDbEIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBiYWNrZ3JvdW5kOiAjZWVmMmYzOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDgwcHgpIHtcbiAgICBib2R5IHtcbiAgICAgIHBhZGRpbmc6IDAgMXJlbTsgfSB9XG5cbi53cmFwIHtcbiAgbWF4LXdpZHRoOiAxMjE2cHg7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5zcGFjZS1sLXIge1xuICBwYWRkaW5nOiAwIDE2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwODBweCkge1xuICAgIC5zcGFjZS1sLXIge1xuICAgICAgcGFkZGluZzogMCAyMHB4OyB9IH1cblxuYSB7XG4gIGNvbG9yOiAjNDE3NTA1O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxubmF2IGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgbmF2IGE6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiAjNDE3NTA1O1xuICAgIG9wYWNpdHk6IDAuMztcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogLTJweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4yczsgfVxuICBuYXYgYTpob3ZlcjpiZWZvcmUge1xuICAgIGhlaWdodDogMThweDsgfVxuXG4uaXRhbGljIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LWZhbWlseTogQmFza2VydmlsbGUsIFwiQmFza2VydmlsbGUgT2xkIEZhY2VcIiwgXCJIb2VmbGVyIFRleHRcIiwgR2FyYW1vbmQsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHNlcmlmOyB9XG5cbi5saW5rLWFycm93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXJpZ2h0OiAxLjI1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7IH1cbiAgLmxpbmstYXJyb3c6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwi4oadXCI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IC01cHg7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG4gIC5saW5rLWFycm93OmhvdmVyIHtcbiAgICBjb2xvcjogI0I4RTk4NjsgfVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5saSB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogU2xpZGVyICovXG4uc2xpY2stc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLnNsaWNrLWxpc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cbiAgLnNsaWNrLWxpc3Q6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgLnNsaWNrLWxpc3QuZHJhZ2dpbmcge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjdXJzb3I6IGhhbmQ7IH1cblxuLnNsaWNrLXNsaWRlciAuc2xpY2stdHJhY2ssXG4uc2xpY2stc2xpZGVyIC5zbGljay1saXN0IHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyB9XG5cbi5zbGljay10cmFjayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2xpY2stdHJhY2s6YmVmb3JlLCAuc2xpY2stdHJhY2s6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLnNsaWNrLXRyYWNrOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuc2xpY2stbG9hZGluZyAuc2xpY2stdHJhY2sge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4uc2xpY2stc2xpZGUge1xuICBmbG9hdDogbGVmdDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgW2Rpcj1cInJ0bFwiXSAuc2xpY2stc2xpZGUge1xuICAgIGZsb2F0OiByaWdodDsgfVxuICAuc2xpY2stc2xpZGUgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2xpY2stc2xpZGUuc2xpY2stbG9hZGluZyBpbWcge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnNsaWNrLXNsaWRlLmRyYWdnaW5nIGltZyB7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgLnNsaWNrLWluaXRpYWxpemVkIC5zbGljay1zbGlkZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNsaWNrLWxvYWRpbmcgLnNsaWNrLXNsaWRlIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLnNsaWNrLXZlcnRpY2FsIC5zbGljay1zbGlkZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbi5zbGljay1hcnJvdy5zbGljay1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5zbGljay1kb3RzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiA5OTk7XG4gIGJvdHRvbTogMC42MjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAuc2xpY2stZG90cyBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAwIDAuMTg3NXJlbTsgfVxuICAuc2xpY2stZG90cyBidXR0b24ge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyOiAwO1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGhlaWdodDogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgb3BhY2l0eTogMC42O1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4OyB9XG4gIC5zbGljay1kb3RzIC5zbGljay1hY3RpdmUgYnV0dG9uIHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbmhlYWRlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICBoZWFkZXIgaDEge1xuICAgIG1hcmdpbjogMTVweCAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MzZweCkge1xuICAgIGhlYWRlciB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9IH1cblxuLm1hbmRhcmluLW1hbnNpb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLm1hbmRhcmluLW1hbnNpb24gc21hbGwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgICBmb250LXNpemU6IDUwJTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAubWFuZGFyaW4tbWFuc2lvbiBzbWFsbDpiZWZvcmUsIC5tYW5kYXJpbi1tYW5zaW9uIHNtYWxsOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDE3JTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBtYXJnaW4tdG9wOiAtMXB4O1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMzMzO1xuICAgICAgb3BhY2l0eTogMC42OyB9XG4gICAgLm1hbmRhcmluLW1hbnNpb24gc21hbGw6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IDA7IH1cblxubmF2IHtcbiAgcGFkZGluZy1ib3R0b206IDE2cHg7IH1cbiAgbmF2IGEge1xuICAgIGNvbG9yOiAjMzMzOyB9XG4gICAgbmF2IGE6YmVmb3JlIHtcbiAgICAgIG9wYWNpdHk6IDA7IH1cbiAgICBuYXYgYTpob3ZlcjpiZWZvcmUge1xuICAgICAgb3BhY2l0eTogMC4zOyB9XG4gIG5hdiB1bFxubGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDAgNXB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MzZweCkge1xuICAgIG5hdiB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBtYXJnaW4tdG9wOiAyLjA2MjVyZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDsgfSB9XG5cbi5jYXJvdXNlbC1zaG9wIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5jYXJvdXNlbC1zaG9wIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uY2Fyb3VzZWwtc2hvcCBoMiB7XG4gIG1hcmdpbjogMDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDgwcHgpIHtcbiAgLmhlcm8ge1xuICAgIGhlaWdodDogMzIwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAuaGVybyBpbWcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHotaW5kZXg6IDE7IH1cbiAgICAuaGVyb19fY29udGVudCB7XG4gICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMjAlO1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg1MSwgNTEsIDUxLCAwLjgpO1xuICAgICAgcGFkZGluZzogMC42MjVyZW0gMC45Mzc1cmVtO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB6LWluZGV4OiAyOyB9XG4gICAgICAuaGVyb19fY29udGVudCBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMi4xMjVyZW07IH0gfVxuXG4uaW50cm9kdWN0aW9uIHtcbiAgcGFkZGluZzogMC42MjVyZW0gMS4yNXJlbTtcbiAgYmFja2dyb3VuZDogIzMzMyB1cmwoXCIuLi9pbWFnZXMvYmctaW50cm8uanBnXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaW50cm9kdWN0aW9uIGEge1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5pbnRyb2R1Y3Rpb25fX2NvbnRlbnQge1xuICAgIHotaW5kZXg6IDI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5pbnRyb2R1Y3Rpb246YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6ICMzMzM7XG4gICAgb3BhY2l0eTogMC44O1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHotaW5kZXg6IDE7IH1cbiAgLmludHJvZHVjdGlvbiBoMiB7XG4gICAgbWFyZ2luOiAwIDAgMXJlbTsgfVxuICAuaW50cm9kdWN0aW9uIHAge1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzM2cHgpIHtcbiAgICAuaW50cm9kdWN0aW9uIHtcbiAgICAgIHBhZGRpbmc6IDIuNXJlbSA1cmVtOyB9XG4gICAgICAuaW50cm9kdWN0aW9uIC5hdmF0YXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiAzcmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAtMy40Mzc1cmVtOyB9XG4gICAgICAuaW50cm9kdWN0aW9uX19jb250ZW50IHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMi41cmVtOyB9XG4gICAgICAuaW50cm9kdWN0aW9uIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjEyNXJlbTsgfVxuICAgICAgLmludHJvZHVjdGlvbiBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyLjRyZW07IH0gfVxuXG4uYXZhdGFyIHtcbiAgd2lkdGg6IDExMHB4O1xuICBoZWlnaHQ6IDExMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlcjogc29saWQgMnB4ICNmZmY7IH1cbiAgLmF2YXRhciBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuXG4ucHJvZHVjdHMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxLjg3NXJlbSAwOyB9XG4gIC5wcm9kdWN0cyBsaSB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDgwcHgpIHtcbiAgICAucHJvZHVjdHMge1xuICAgICAgcGFkZGluZzogMy4xMjVyZW0gMCAxLjg3NXJlbTsgfSB9XG5cbi5wcm9kdWN0IHtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gIC5wcm9kdWN0IGgyIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgLnByb2R1Y3QgYSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgcGFkZGluZzogMTBweCAxMHB4IDM0cHg7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzO1xuICAgIGNvbG9yOiAjMzMzOyB9XG4gICAgLnByb2R1Y3QgYTpiZWZvcmUge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5wcm9kdWN0IGE6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzMzMztcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAucHJvZHVjdCBhOmhvdmVyIC5wcm9kdWN0X19wcmljZXRhZyB7XG4gICAgICAgIGJhY2tncm91bmQ6ICMzMzM7IH1cbiAgLnByb2R1Y3RfX2ltZyBpbWcge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5wcm9kdWN0X19wcmljZXRhZyxcbiAgLnByb2R1Y3QgaDIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuICAucHJvZHVjdF9fcHJpY2V0YWcge1xuICAgIHBhZGRpbmc6IDJweCA1cHg7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdG9wOiAyMHB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7IH1cbiAgLnByb2R1Y3QgaDIge1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4OyB9XG4gIC5wcm9kdWN0LS1yZXNlcnZlZCBzcGFuLCAucHJvZHVjdC0tc29sZCBzcGFuIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIC5wcm9kdWN0LS1yZXNlcnZlZCBhIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDUxLCA1MSwgNTEsIDAuNSk7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgICAucHJvZHVjdC0tcmVzZXJ2ZWQgYSAucHJvZHVjdF9fcHJpY2V0YWcge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg1MSwgNTEsIDUxLCAwLjUpOyB9XG4gIC5wcm9kdWN0LS1zb2xkIGEge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoNTEsIDUxLCA1MSwgMC4yKTtcbiAgICBjb2xvcjogIzMzMzsgfVxuICAgIC5wcm9kdWN0LS1zb2xkIGEgLnByb2R1Y3RfX2ltZyB7XG4gICAgICBvcGFjaXR5OiAwLjU7IH1cbiAgICAucHJvZHVjdC0tc29sZCBhIC5wcm9kdWN0X19wcmljZXRhZyB7XG4gICAgICB6LWluZGV4OiA1O1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg1MSwgNTEsIDUxLCAwLjEpOyB9XG4gICAgLnByb2R1Y3QtLXNvbGQgYTpob3ZlciAucHJvZHVjdF9faW1nIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDczNnB4KSB7XG4gICAgLnByb2R1Y3Qge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJS8yKTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwODBweCkge1xuICAgIC5wcm9kdWN0IHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUvNCk7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjg3NXJlbTsgfSB9XG5cbi51cGRhdGUtd2lkZ2V0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMCAwLjkzNzVyZW07IH1cblxuLnVwZGF0ZSBoZWFkZXIge1xuICBiYWNrZ3JvdW5kOiBub25lOyB9XG5cbi51cGRhdGUgaDIsIC51cGRhdGUgaDMge1xuICBmb250LXdlaWdodDogNDAwOyB9XG5cbi51cGRhdGUgaDMge1xuICBtYXJnaW4tYm90dG9tOiAwLjMxMjVyZW07IH1cblxuLnVwZGF0ZSBzbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07IH1cblxuLnVwZGF0ZSBwIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNXJlbTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTA4MHB4KSB7XG4gIC51cGRhdGUge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICAudXBkYXRlIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gICAgLnVwZGF0ZSBoMiB7XG4gICAgICBmb250LXNpemU6IDIuMTI1cmVtOyB9XG4gICAgLnVwZGF0ZSBzbWFsbCB7XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTA4MHB4KSB7XG4gIC53aWRnZXQge1xuICAgIHdpZHRoOiAyNSU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1pbi1oZWlnaHQ6IDI3MHB4O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zKTsgfSB9XG5cbmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgcGFkZGluZzogMCAwLjkzNzVyZW0gMXJlbTtcbiAgbWFyZ2luLXRvcDogMy4xMjVyZW07IH1cbiAgZm9vdGVyIGEge1xuICAgIGNvbG9yOiAjODA4MDgwOyB9XG4gIGZvb3RlciBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zMTI1cmVtOyB9XG4gIGZvb3RlciB1bCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9XG4gIGZvb3RlciBoMiB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTA4MHB4KSB7XG4gICAgZm9vdGVyID4gZGl2IHtcbiAgICAgIHBhZGRpbmc6IDAgMS44NzVyZW07XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJS8zKTtcbiAgICAgIGZsb2F0OiBsZWZ0OyB9IH1cblxuLmNvcHlyaWdodCB7XG4gIGNsZWFyOiBib3RoO1xuICBmbG9hdDogbGVmdDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICM4MDgwODA7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cbiIsIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59IiwiYm9keSB7XG4gIGNvbG9yOiAkY29sb3ItcHJpbWFyeTtcbiAgZm9udC1mYW1pbHk6ICRmb250LWJhc2U7XG4gIGZvbnQtc2l6ZTogcmVtKDE2cHgpO1xuICBiYWNrZ3JvdW5kOiAkY29sb3ItYmc7XG4gIC8vcGFkZGluZzogMCByZW0oMTZweCk7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgICBwYWRkaW5nOiAwIHJlbSgxNnB4KTtcbiAgfVxufVxuXG4ud3JhcCB7XG4gIG1heC13aWR0aDogJGJwLXhsO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLnNwYWNlLWwtciB7XG4gIHBhZGRpbmc6IDAgJHNwYWNlLXNtO1xuICBAbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gICAgcGFkZGluZzogMCAkc3BhY2UtbGc7XG4gIH1cbn1cblxuYSB7XG4gIGNvbG9yOiAkY29sb3ItZ3JlZW47XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxubmF2IGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItZ3JlZW47XG4gICAgb3BhY2l0eTogMC4zO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAtMnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjJzO1xuICB9XG4gICY6aG92ZXIge1xuICAgICY6YmVmb3JlIHtcbiAgICAgIGhlaWdodDogMThweDtcbiAgICB9XG4gIH1cbn1cblxuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1mYW1pbHk6ICRmb250LXNlcmlmO1xufVxuXG4ubGluay1hcnJvdyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1yaWdodDogcmVtKDIwcHgpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwi4oadXCI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IC01cHg7XG4gICAgZm9udC1zaXplOiByZW0oMjBweCk7XG4gIH1cbiAgJjpob3ZlciB7XG4gICAgY29sb3I6ICRjb2xvci1ncmVlbi1saWdodDtcbiAgfVxufVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxubGkge1xuICBwYWRkaW5nOiAwO1xufSIsIiRmb250LWJhc2U6ICdNb250c2VycmF0JywgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuJGZvbnQtc2VyaWY6IEJhc2tlcnZpbGxlLCAnQmFza2VydmlsbGUgT2xkIEZhY2UnLCAnSG9lZmxlciBUZXh0JywgR2FyYW1vbmQsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZjtcblxuJGNvbG9yLXByaW1hcnk6ICMzMzM7XG4kY29sb3ItYmc6ICNlZWYyZjM7XG5cbiRjb2xvci13aGl0ZTogI2ZmZjtcblxuJGNvbG9yLWdyZWVuOiAjNDE3NTA1O1xuJGNvbG9yLWdyZWVuLWxpZ2h0OiAjQjhFOTg2OyIsIi8vIEJhc2ljIHJlbSBjb252ZXJ0ZXJcbkBmdW5jdGlvbiByZW0oJHRhcmdldCwgJGJhc2U6MTZweCkge1xuICBAcmV0dXJuICgkdGFyZ2V0IC8gJGJhc2UpICsgcmVtO1xufSIsIiRicC1zbTogNDgwcHg7XG4kYnAtbWQ6IDczNnB4O1xuJGJwLWxnOiAxMDgwcHg7XG4kYnAteGw6IDEyMTZweDtcblxuJHNwYWNlLXNtOiAxNnB4O1xuJHNwYWNlLWxnOiAyMHB4O1xuXG5cbi8vICoge1xuLy8gICBAaW5jbHVkZSBib3gtc2l6aW5nKGJvcmRlci1ib3gpO1xuLy8gfVxuXG4vLyAkcGFkOiAyMHB4O1xuXG4vLyAuZ3JpZCB7XG4vLyAgIGJhY2tncm91bmQ6IHdoaXRlO1xuLy8gICBtYXJnaW46IDAgMCAkcGFkIDA7XG5cbi8vICAgJjphZnRlciB7XG4vLyAgICAgLyogT3IgQGV4dGVuZCBjbGVhcmZpeCAqL1xuLy8gICAgIGNvbnRlbnQ6IFwiXCI7XG4vLyAgICAgZGlzcGxheTogdGFibGU7XG4vLyAgICAgY2xlYXI6IGJvdGg7XG4vLyAgIH1cbi8vIH1cblxuLy8gW2NsYXNzKj0nY29sLSddIHtcbi8vICAgZmxvYXQ6IGxlZnQ7XG4vLyAgIHBhZGRpbmctcmlnaHQ6ICRwYWQ7XG4vLyAgIC5ncmlkICY6bGFzdC1vZi10eXBlIHtcbi8vICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuLy8gICB9XG4vLyB9XG4vLyAuY29sLTItMyB7XG4vLyAgIHdpZHRoOiA2Ni42NiU7XG4vLyB9XG4vLyAuY29sLTEtMyB7XG4vLyAgIHdpZHRoOiAzMy4zMyU7XG4vLyB9XG4vLyAuY29sLTEtMiB7XG4vLyAgIHdpZHRoOiA1MCU7XG4vLyB9XG4vLyAuY29sLTEtNCB7XG4vLyAgIHdpZHRoOiAyNSU7XG4vLyB9XG4vLyAuY29sLTEtOCB7XG4vLyAgIHdpZHRoOiAxMi41JTtcbi8vIH1cblxuLy8gLyogT3B0LWluIG91dHNpZGUgcGFkZGluZyAqL1xuLy8gLmdyaWQtcGFkIHtcbi8vICAgcGFkZGluZzogJHBhZCAwICRwYWQgJHBhZDtcbi8vICAgW2NsYXNzKj0nY29sLSddOmxhc3Qtb2YtdHlwZSB7XG4vLyAgICAgcGFkZGluZy1yaWdodDogJHBhZDtcbi8vICAgfVxuLy8gfSIsIi8qIFNsaWRlciAqL1xuXG4uc2xpY2stc2xpZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICAgIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5zbGljay1saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcblxuICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cblxuICAgICYuZHJhZ2dpbmcge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGN1cnNvcjogaGFuZDtcbiAgICB9XG59XG4uc2xpY2stc2xpZGVyIC5zbGljay10cmFjayxcbi5zbGljay1zbGlkZXIgLnNsaWNrLWxpc3Qge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuXG4uc2xpY2stdHJhY2sge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxuXG4gICAgLnNsaWNrLWxvYWRpbmcgJiB7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB9XG59XG4uc2xpY2stc2xpZGUge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbiAgICBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgJi5zbGljay1sb2FkaW5nIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgICYuZHJhZ2dpbmcgaW1nIHtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuXG4gICAgLnNsaWNrLWluaXRpYWxpemVkICYge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIH1cblxuICAgIC5zbGljay12ZXJ0aWNhbCAmIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxufVxuLnNsaWNrLWFycm93LnNsaWNrLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLnNsaWNrLWRvdHMge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDk5OTtcbiAgYm90dG9tOiByZW0oMTBweCk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMCByZW0oM3B4KTtcbiAgfVxuICBidXR0b24ge1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcbiAgICBib3JkZXI6IDA7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gIH1cbiAgLnNsaWNrLWFjdGl2ZSBidXR0b24ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbiIsImhlYWRlciB7XG4gIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoMSB7IG1hcmdpbjogMTVweCAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG5cbi5tYW5kYXJpbi1tYW5zaW9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBzbWFsbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3BhY2l0eTogMC42O1xuICAgIGZvbnQtc2l6ZTogNTAlO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDE3JTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBtYXJnaW4tdG9wOiAtMXB4O1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMzMzO1xuICAgICAgb3BhY2l0eTogMC42O1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHJpZ2h0OiAwO1xuICAgIH1cbiAgfVxufVxuXG5uYXYge1xuICBhIHsgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuICAgICY6YmVmb3JlIHsgb3BhY2l0eTogMDsgfVxuICAgICY6aG92ZXIge1xuICAgICAgJjpiZWZvcmUgeyBvcGFjaXR5OiAwLjM7fVxuICAgIH1cbiAgfVxuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgdWxcbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXRvcDogcmVtKDMzcHgpO1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICB9XG59IiwiLmNhcm91c2VsLXNob3Age1xuICBhIHsgZGlzcGxheTogYmxvY2s7IGhlaWdodDogMTAwJTsgfVxuICBpbWcgeyBtYXgtd2lkdGg6IDEwMCU7IH1cbiAgaDIgeyBtYXJnaW46IDA7IH1cbn1cblxuLmhlcm8ge1xuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgICBoZWlnaHQ6IDMyMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGltZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgei1pbmRleDogMTtcbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgIG1heC13aWR0aDogNTAlO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAyMCU7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDUxLDUxLDUxLDAuOCk7XG4gICAgICBwYWRkaW5nOiByZW0oMTBweCkgcmVtKDE1cHgpO1xuICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICAgIHotaW5kZXg6IDI7XG5cbiAgICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiByZW0oMzRweCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiLmludHJvZHVjdGlvbiB7XG4gIHBhZGRpbmc6IHJlbSgxMHB4KSByZW0oMjBweCk7XG4gIGJhY2tncm91bmQ6ICRjb2xvci1wcmltYXJ5IHVybCgnLi4vaW1hZ2VzL2JnLWludHJvLmpwZycpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBhIHsgY29sb3I6ICRjb2xvci13aGl0ZTsgfVxuICAmX19jb250ZW50IHtcbiAgICB6LWluZGV4OiAyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAmOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItcHJpbWFyeTtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgY29udGVudDogJyc7XG4gICAgei1pbmRleDogMTtcbiAgfVxuICBoMiB7IG1hcmdpbjogMCAwIDFyZW07IH1cbiAgcCB7IG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gICAgLmF2YXRhciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGxlZnQ6IDNyZW07XG4gICAgICBtYXJnaW4tdG9wOiByZW0oLTU1cHgpO1xuICAgIH1cbiAgICAmX19jb250ZW50IHtcbiAgICAgIHBhZGRpbmctbGVmdDogcmVtKDIwMHB4KTtcbiAgICB9XG5cbiAgICBoMiB7IGZvbnQtc2l6ZTogcmVtKDM0cHgpOyB9XG4gICAgcCB7XG4gICAgICBmb250LXNpemU6IHJlbSgyNHB4KTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gICAgfVxuICAgIHBhZGRpbmc6IHJlbSg0MHB4KSByZW0oODBweCk7XG4gIH1cbn1cblxuLmF2YXRhciB7XG4gIHdpZHRoOiAxMTBweDtcbiAgaGVpZ2h0OiAxMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXI6IHNvbGlkIDJweCAkY29sb3Itd2hpdGU7XG4gIGltZyB7IG1heC13aWR0aDogMTAwJTsgfVxufSIsIi5wcm9kdWN0cyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IHJlbSgzMHB4KSAwO1xuICBsaSB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgICBwYWRkaW5nOiByZW0oNTBweCkgMCByZW0oMzBweCk7XG4gIH1cbn1cblxuLnByb2R1Y3Qge1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbi1ib3R0b206IHJlbSgxNnB4KTtcbiAgaDIgeyBtYXJnaW46IDA7IH1cbiAgYSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHggMzRweDtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnM7XG4gICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuICAgICY6YmVmb3JlIHsgZGlzcGxheTogbm9uZTsgfVxuICAgICY6aG92ZXIge1xuICAgICAgLnByb2R1Y3RfX3ByaWNldGFnIHsgYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7IH1cbiAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1wcmltYXJ5O1xuICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICB9XG4gIH1cbiAgJl9faW1nIHtcbiAgICBpbWcgeyB3aWR0aDogMTAwJTsgfVxuICB9XG4gICZfX3ByaWNldGFnLFxuICBoMiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICB9XG5cbiAgJl9fcHJpY2V0YWcge1xuICAgIHBhZGRpbmc6IDJweCA1cHg7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdG9wOiAyMHB4O1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcbiAgfVxuICBoMiB7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gIH1cbiAgJi0tcmVzZXJ2ZWQsXG4gICYtLXNvbGQge1xuICAgIHNwYW4geyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIH1cblxuICAmLS1yZXNlcnZlZCBhIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDUxLDUxLDUxLDAuNSk7XG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICAucHJvZHVjdF9fcHJpY2V0YWcge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg1MSw1MSw1MSwwLjUpO1xuICAgIH1cbiAgfVxuXG4gICYtLXNvbGQgYSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSg1MSw1MSw1MSwwLjIpO1xuICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeTtcbiAgICAucHJvZHVjdF9faW1nIHsgb3BhY2l0eTogMC41OyB9XG4gICAgLnByb2R1Y3RfX3ByaWNldGFnIHtcbiAgICAgIHotaW5kZXg6IDU7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDUxLDUxLDUxLDAuMSk7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgLnByb2R1Y3RfX2ltZyB7IG9wYWNpdHk6IDE7IH1cbiAgICB9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJS8yKTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oMTVweCk7XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUvNCk7XG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDMwcHgpO1xuICB9XG59IiwiLnVwZGF0ZS13aWRnZXQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwIHJlbSgxNXB4KTtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuXG4gIH1cbn1cbi51cGRhdGUge1xuICBoZWFkZXIgeyBiYWNrZ3JvdW5kOiBub25lOyB9XG4gIGgyLCBoMyB7IGZvbnQtd2VpZ2h0OiA0MDA7IH1cbiAgaDMgeyBtYXJnaW4tYm90dG9tOiByZW0oNXB4KTsgfVxuICBzbWFsbCB7IGZvbnQtc2l6ZTogcmVtKDE0cHgpOyB9XG4gIHAge1xuICAgIGZvbnQtc2l6ZTogcmVtKDE0cHgpO1xuICAgIGxpbmUtaGVpZ2h0OiByZW0oMjRweCk7XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaDMgeyBmb250LXNpemU6IHJlbSgyNHB4KTsgfVxuICAgIGgyIHsgZm9udC1zaXplOiByZW0oMzRweCk7IH1cbiAgICBzbWFsbCB7IGZvbnQtc2l6ZTogcmVtKDE2cHgpOyB9XG4gIH1cbn1cblxuLndpZGdldCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgICB3aWR0aDogMjUlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtaW4taGVpZ2h0OiAyNzBweDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIH1cbn0iLCJmb290ZXIge1xuICBiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtc2l6ZTogcmVtKDEycHgpO1xuICBwYWRkaW5nOiAwIHJlbSgxNXB4KSByZW0oMTZweCk7XG4gIG1hcmdpbi10b3A6IHJlbSg1MHB4KTtcbiAgYSB7IGNvbG9yOiAjODA4MDgwOyB9XG4gIGxpIHsgbWFyZ2luLWJvdHRvbTogcmVtKDVweCk7IH1cbiAgdWwge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfVxuICBoMiB7IGZvbnQtd2VpZ2h0OiA0MDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAgID4gZGl2IHtcbiAgICAgIHBhZGRpbmc6IDAgcmVtKDMwcHgpO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUvMyk7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gIH1cblxufVxuXG4uY29weXJpZ2h0IHtcbiAgY2xlYXI6IGJvdGg7XG4gIGZsb2F0OiBsZWZ0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogIzgwODA4MDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
